server.port=8085
#--------------------------------server config begin--------------------------------#
#socket端口
serverConfig.serverType=LOGIN
serverConfig.port=8002
serverConfig.serverId=0
serverConfig.isCenter=1
#是否发送rpc
serverConfig.isSendRPC=1
#游戏rpc服务端口
serverConfig.gameRpcServerPort=9090
#管理平台rpc的ip 和 端口
serverConfig.adminRpcHost=127.0.0.1
serverConfig.adminRpcPort=9999
serverConfig.startNewGameRpc=1
serverConfig.dataFile=E:\\summer1\\data\\static_data.json
#serverConfig.dataFile = /root/summer/data/static_data.json
serverConfig.clubCreateMoney=100
serverConfig.clubRoomModelLimit = 50
serverConfig.clubLimit = 50
serverConfig.clubJoinLimit = 50
serverConfig.lq_http_url = http://long7.l7jqr.com/RoomResult_club.php
serverConfig.send_lq_http = 1
serverConfig.clubPushUserRoomInfo = 1
serverConfig.saveReplay = 1
serverConfig.bindRefereeReward = 5
serverConfig.deleteRecordTask = 0
#俱乐部玩家是否带钱
serverConfig.hasClubMoney = 0

serverConfig.domain = http://192.168.1.132/
serverConfig.domainMapKey = nx
serverConfig.domainMap[nx] = dong
serverConfig.domainMap[sx] = xiao

serverConfig.chargeMap[1] = 1
serverConfig.chargeMap[8] = 8
serverConfig.chargeMap[18] = 18
serverConfig.chargeMap[38] = 44
serverConfig.chargeMap[88] = 106
serverConfig.chargeMap[188] = 226
serverConfig.chargeMap[388] = 476
serverConfig.chargeMap[588] = 776
serverConfig.chargeMap[888] = 1276

#玩家充值折扣 根据vip字段取
serverConfig.discount[0] = 100
serverConfig.discount[1] = 60
serverConfig.discount[2] = 50
serverConfig.discount[3] = 35

#一级代理返利比例
serverConfig.agentFirstRebate[0] = 0
serverConfig.agentFirstRebate[1] = 35
serverConfig.agentFirstRebate[2] = 50
serverConfig.agentFirstRebate[3] = 65

#二级代理返利比例
serverConfig.agentSecondRebate[0] = 0
serverConfig.agentSecondRebate[1] = 0
serverConfig.agentSecondRebate[2] = 2
serverConfig.agentSecondRebate[3] = 5

serverConfit.zlbRebate[0] = 0
serverConfit.zlbRebate[1] = 0
serverConfit.zlbRebate[2] = 10
serverConfit.zlbRebate[3] = 15
serverConfit.zlbRebate[4] = 25
serverConfit.zlbRebate[5] = 35

serverConfit.zlbAAOne[0] = 0
serverConfit.zlbAAOne[1] = 0
serverConfit.zlbAAOne[2] = 70
serverConfit.zlbAAOne[3] = 72
serverConfit.zlbAAOne[4] = 75
serverConfit.zlbAAOne[5] = 80

serverConfit.zlbAATwo[0] = 0
serverConfit.zlbAATwo[1] = 0
serverConfit.zlbAATwo[2] = 2
serverConfit.zlbAATwo[3] = 5
serverConfit.zlbAATwo[4] = 10
serverConfit.zlbAATwo[5] = 15

serverConfit.zlbAAThree[0] = 0
serverConfit.zlbAAThree[1] = 0
serverConfit.zlbAAThree[2] = 0
serverConfit.zlbAAThree[3] = 3
serverConfit.zlbAAThree[4] = 4
serverConfit.zlbAAThree[5] = 5


serverConfig.paysapiUrl =
serverConfig.paysapiNotifyUrl =http://baidu.com
serverConfig.paysapiReturnUrl =http://baidu.com

serverConfig.cftPayId = 68019026133901
serverConfig.cftPayKey = 046809172632GPAN4nvs

#是否开启机器人
serverConfig.startRobot = 1
serverConfig.loadAllUser = 1
serverConfig.qrDir = E://qrcode/
serverConfig.qrUrl = http://fir.cool



#----------------pay begin--------------------------------#
#应用id
serverConfig.appId=wxbe4c118bab22e7e9
#商户号
serverConfig.mchId=1521191801
#API秘钥
serverConfig.key=gjgjgkhkjlffdddddddddddddggggggg
#回调地址
serverConfig.notifyUrl=http://101.201.209.77:8085/callback
#----------------pay end--------------------------------#



#----------------wechat begin--------------------------------#
wechat.mpAppId=wxe63c92a10a6a2adb
wechat.mpAppSecret=a35b539b818555736fdc681b810bed69
#wechat.mpAppId=wx1487c8302e486501
#wechat.mpAppSecret=f3010b13de6e9ce6067512cfd0ac9802
wechat.token=111
wechat.aesKey=bTvUAuYBDAkHqOb901wvpHL1SSbThF6wPQ0Es3eQD9s

wechat.openAppId=wx6ad144e54af67d87
wechat.openAppSecret=91a2ff6d38a2bbccfb7e9f9079108e2e
wechat.mchId=15031389
wechat.mchKey=EAF6AE4897CE03CF2A74B8BCDDF106
wechat.keyPath=/var/weixin_cert/h5.p12
wechat.notifyUrl=http://sell.natapp4.cc/sell/pay/notify

#----------------wechat end--------------------------------#

#页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
#页面默认后缀目录
spring.mvc.view.suffix=.jsp
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
##
##<!-- 关闭thymeleaf缓存 开发时使用 否则没有实时画面-->
#spring.thymeleaf.cache=false
#### 检查模板是否存在，然后再呈现
##spring.thymeleaf.check-template-location=true
###Content-Type值
##spring.thymeleaf.content-type=text/html
###启用MVC Thymeleaf视图分辨率
#spring.thymeleaf.enabled=true
#### 应该从解决方案中排除的视图名称的逗号分隔列表
####spring.thymeleaf.excluded-view-names=
###模板编码
##spring.thymeleaf.mode=LEGACYHTML5
### 在构建URL时预先查看名称的前缀
##spring.thymeleaf.prefix=classpath:/templates/
### 构建URL时附加查看名称的后缀.
##spring.thymeleaf.suffix=.html
## 链中模板解析器的顺序
##spring.thymeleaf.template-resolver-order= o
## 可以解析的视图名称的逗号分隔列表
##spring.thymeleaf.view-names=
##thymeleaf end
#----------------


#--------------------------------mysql begin--------------------------------#
spring.datasource.url=jdbc:mysql://localhost:3306/summer?autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# Specify the DBMS
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#--------------------------------endpoints begin--------------------------------#
endpoints.beans.id=springbeans
endpoints.beans.sensitive=false
endpoints.shutdown.enabled=false
management.security.enabled=false
#--------------------------------kafka begin--------------------------------#
#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=106.75.4.29:9092,192.168.59.131:9092,192.168.59.132:9092
# 指定默认topic id
#spring.kafka.template.default-topic= test
# 指定默认消费者group id
spring.kafka.consumer.group-id=userServiceGroup
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.max-poll-records=100
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer=104857600
spring.kafka.properties[max.partition.fetch.bytes] = 104857600
spring.kafka.properties[max.request.size] = 104857600
#spring.kafka.listener.ack-count= 1
#spring.kafka.listener.ack-mode= COUNT
#spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
#spring.kafka.listener.ack-mode=MANUAL
# 指定listener 容器中的线程数，用于提高并发量
#spring.kafka.listener.concurrency= 1
#spring.kafka.listener.poll-timeout= 200
# 每次批量发送消息的数量
#spring.kafka.producer.batch-size= 1000
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#--------------------------------redis begin--------------------------------#
# REDIS (RedisProperties)
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
spring.redis.database=0
#spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
spring.redis.host=127.0.0.1
#spring.redis.password=
spring.redis.ssl=false
spring.redis.pool.max-active=8
spring.redis.pool.max-idle=8
spring.redis.pool.max-wait=-1
spring.redis.pool.min-idle=0
spring.redis.port=6379
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
spring.redis.timeout=0
#--------------------------------logger begin--------------------------------#
#logging.level.com.code.server=ERROR